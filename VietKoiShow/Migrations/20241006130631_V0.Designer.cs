// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VietKoiShow.Models;

#nullable disable

namespace VietKoiShow.Migrations
{
    [DbContext(typeof(VietKoiExpoContext))]
    [Migration("20241006130631_V0")]
    partial class V0
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VietKoiShow.Models.Tblcategory", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CategoryID");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Category_Description");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__TBLCateg__19093A2B870AE3D6");

                    b.ToTable("TBLCategory", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblcompetition", b =>
                {
                    b.Property<string>("CompId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompID");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CompDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CompId")
                        .HasName("PK__TBLCompe__AD362A76AD2BEC90");

                    b.HasIndex("CategoryId");

                    b.ToTable("TBLCompetition", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.TblkoiFish", b =>
                {
                    b.Property<string>("KoiId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KoiID");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("KoiName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ResultId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ResultID");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UserID");

                    b.Property<string>("VarietyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VarietyID");

                    b.HasKey("KoiId")
                        .HasName("PK__TBLKoiFi__E03435B85376C1B9");

                    b.HasIndex("ResultId");

                    b.HasIndex("UserId");

                    b.HasIndex("VarietyId");

                    b.ToTable("TBLKoiFish", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblnews", b =>
                {
                    b.Property<string>("NewsId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NewsID");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("NewsTypeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NewsTypeID");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UserID");

                    b.HasKey("NewsId")
                        .HasName("PK__TBLNews__954EBDD323D8C63D");

                    b.HasIndex("NewsTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("TBLNews", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.TblnewsType", b =>
                {
                    b.Property<string>("NewsTypeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NewsTypeID");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("NewsTypeId")
                        .HasName("PK__TBLNewsT__9013FE2A5CA3A75C");

                    b.ToTable("TBLNewsType", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblprediction", b =>
                {
                    b.Property<string>("PredictionId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PredictionID");

                    b.Property<string>("CompId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompID");

                    b.Property<string>("KoiId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KoiID");

                    b.Property<int?>("PredictedScore")
                        .HasColumnType("int");

                    b.HasKey("PredictionId")
                        .HasName("PK__TBLPredi__BAE4C140C86C7AA4");

                    b.HasIndex("CompId");

                    b.HasIndex("KoiId");

                    b.ToTable("TBLPrediction", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblregistration", b =>
                {
                    b.Property<string>("RegistrationId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RegistrationID");

                    b.Property<string>("CompId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompID");

                    b.Property<string>("KoiId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KoiID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId")
                        .HasName("PK__TBLRegis__6EF58830FFE247A1");

                    b.HasIndex("CompId");

                    b.HasIndex("KoiId");

                    b.ToTable("TBLRegistration", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblresult", b =>
                {
                    b.Property<string>("ResultId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ResultID");

                    b.Property<string>("KoiId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KoiID");

                    b.Property<string>("Prize")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("ResultScore")
                        .HasColumnType("float");

                    b.HasKey("ResultId")
                        .HasName("PK__TBLResul__97690228895F78EA");

                    b.HasIndex("KoiId");

                    b.ToTable("TBLResult", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblrole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RoleID");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Role_Description");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__TBLRole__8AFACE3AE8126C23");

                    b.ToTable("TBLRole", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblscore", b =>
                {
                    b.Property<string>("ScoreId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ScoreID");

                    b.Property<string>("CompId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompID");

                    b.Property<string>("KoiId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KoiID");

                    b.Property<double?>("ScoreColor")
                        .HasColumnType("float");

                    b.Property<double?>("ScorePattern")
                        .HasColumnType("float");

                    b.Property<double?>("ScoreShape")
                        .HasColumnType("float");

                    b.Property<double?>("TotalScore")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UserID");

                    b.HasKey("ScoreId")
                        .HasName("PK__TBLScore__7DD229F13E5E5D99");

                    b.HasIndex("CompId");

                    b.HasIndex("KoiId");

                    b.HasIndex("UserId");

                    b.ToTable("TBLScore", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tbluser", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId")
                        .HasName("PK__TBLUser__1788CCACE01F8A26");

                    b.HasIndex("RoleId");

                    b.ToTable("TBLUser", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblvariety", b =>
                {
                    b.Property<string>("VarietyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VarietyID");

                    b.Property<string>("Origin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VarietyDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Variety_Description");

                    b.Property<string>("VarietyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("VarietyId")
                        .HasName("PK__TBLVarie__08E3A048C6F34A8B");

                    b.ToTable("TBLVariety", (string)null);
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblcompetition", b =>
                {
                    b.HasOne("VietKoiShow.Models.Tblcategory", "Category")
                        .WithMany("Tblcompetitions")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_TBLCompetition_CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VietKoiShow.Models.TblkoiFish", b =>
                {
                    b.HasOne("VietKoiShow.Models.Tblresult", "Result")
                        .WithMany("TblkoiFishes")
                        .HasForeignKey("ResultId")
                        .HasConstraintName("FK_TBLKoiFish_ResultID");

                    b.HasOne("VietKoiShow.Models.Tbluser", "User")
                        .WithMany("TblkoiFishes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TBLKoiFis__UserI__44FF419A");

                    b.HasOne("VietKoiShow.Models.Tblvariety", "Variety")
                        .WithMany("TblkoiFishes")
                        .HasForeignKey("VarietyId")
                        .HasConstraintName("FK__TBLKoiFis__Varie__440B1D61");

                    b.Navigation("Result");

                    b.Navigation("User");

                    b.Navigation("Variety");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblnews", b =>
                {
                    b.HasOne("VietKoiShow.Models.TblnewsType", "NewsType")
                        .WithMany("Tblnews")
                        .HasForeignKey("NewsTypeId")
                        .HasConstraintName("FK__TBLNews__NewsTyp__3E52440B");

                    b.HasOne("VietKoiShow.Models.Tbluser", "User")
                        .WithMany("Tblnews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TBLNews__UserID__3F466844");

                    b.Navigation("NewsType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblprediction", b =>
                {
                    b.HasOne("VietKoiShow.Models.Tblcompetition", "Comp")
                        .WithMany("Tblpredictions")
                        .HasForeignKey("CompId")
                        .HasConstraintName("FK__TBLPredic__CompI__5535A963");

                    b.HasOne("VietKoiShow.Models.TblkoiFish", "Koi")
                        .WithMany("Tblpredictions")
                        .HasForeignKey("KoiId")
                        .HasConstraintName("FK__TBLPredic__KoiID__5441852A");

                    b.Navigation("Comp");

                    b.Navigation("Koi");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblregistration", b =>
                {
                    b.HasOne("VietKoiShow.Models.Tblcompetition", "Comp")
                        .WithMany("Tblregistrations")
                        .HasForeignKey("CompId")
                        .HasConstraintName("FK__TBLRegist__CompI__4E88ABD4");

                    b.HasOne("VietKoiShow.Models.TblkoiFish", "Koi")
                        .WithMany("Tblregistrations")
                        .HasForeignKey("KoiId")
                        .HasConstraintName("FK__TBLRegist__KoiID__4D94879B");

                    b.Navigation("Comp");

                    b.Navigation("Koi");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblresult", b =>
                {
                    b.HasOne("VietKoiShow.Models.TblkoiFish", "Koi")
                        .WithMany("Tblresults")
                        .HasForeignKey("KoiId")
                        .HasConstraintName("FK__TBLResult__KoiID__47DBAE45");

                    b.Navigation("Koi");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblscore", b =>
                {
                    b.HasOne("VietKoiShow.Models.Tblcompetition", "Comp")
                        .WithMany("Tblscores")
                        .HasForeignKey("CompId")
                        .HasConstraintName("FK__TBLScore__CompID__59063A47");

                    b.HasOne("VietKoiShow.Models.TblkoiFish", "Koi")
                        .WithMany("Tblscores")
                        .HasForeignKey("KoiId")
                        .HasConstraintName("FK__TBLScore__KoiID__5812160E");

                    b.HasOne("VietKoiShow.Models.Tbluser", "User")
                        .WithMany("Tblscores")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TBLScore__UserID__59FA5E80");

                    b.Navigation("Comp");

                    b.Navigation("Koi");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tbluser", b =>
                {
                    b.HasOne("VietKoiShow.Models.Tblrole", "Role")
                        .WithMany("Tblusers")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__TBLUser__RoleID__3B75D760");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblcategory", b =>
                {
                    b.Navigation("Tblcompetitions");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblcompetition", b =>
                {
                    b.Navigation("Tblpredictions");

                    b.Navigation("Tblregistrations");

                    b.Navigation("Tblscores");
                });

            modelBuilder.Entity("VietKoiShow.Models.TblkoiFish", b =>
                {
                    b.Navigation("Tblpredictions");

                    b.Navigation("Tblregistrations");

                    b.Navigation("Tblresults");

                    b.Navigation("Tblscores");
                });

            modelBuilder.Entity("VietKoiShow.Models.TblnewsType", b =>
                {
                    b.Navigation("Tblnews");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblresult", b =>
                {
                    b.Navigation("TblkoiFishes");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblrole", b =>
                {
                    b.Navigation("Tblusers");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tbluser", b =>
                {
                    b.Navigation("TblkoiFishes");

                    b.Navigation("Tblnews");

                    b.Navigation("Tblscores");
                });

            modelBuilder.Entity("VietKoiShow.Models.Tblvariety", b =>
                {
                    b.Navigation("TblkoiFishes");
                });
#pragma warning restore 612, 618
        }
    }
}
